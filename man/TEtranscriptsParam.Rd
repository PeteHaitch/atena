% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TEtranscripts.R
\name{TEtranscriptsParam}
\alias{TEtranscriptsParam}
\title{Build a TEtranscripts parameter object}
\usage{
TEtranscriptsParam(
  bfl,
  annotations,
  aggregateby = character(0),
  singleEnd = FALSE,
  ignoreStrand = TRUE,
  strandMode = 1L,
  fragments = TRUE,
  tolerance = 1e-04,
  maxIter = 100L
)
}
\arguments{
\item{bfl}{A \code{BamFile} or \code{BamFileList} object, or a character
string vector of BAM filenames.}

\item{annotations}{A \code{GRanges} or \code{GRangesList} object with the
annotations to be quantified. Elements in this object should have names,
which will be used as a grouping factor for genomic ranges forming a common
locus, unless other metadata column names are specified in the
\code{aggregateby} parameter.}

\item{aggregateby}{Character vector with column names in the annotation
to be used to aggregate quantifications. By default, this is an empty vector,
which means that the names of the input \code{GRanges} or \code{GRangesList}
object given in the \code{annotations} parameter will be used to aggregate
quantifications.}

\item{singleEnd}{(Default FALSE) Logical value indicating if reads are single
(\code{TRUE}) or paired-end (\code{FALSE}).}

\item{ignoreStrand}{(Default TRUE) A logical which defines if the strand
should be taken into consideration when computing the overlap between reads
and TEs/ERVs in the annotations. When \code{ignore_strand = FALSE}, the
\code{\link[GenomicAlignments]{summarizeOverlaps}} function will only
consider those reads selected after filtering which overlap the TE or
ERV on the same strand. On the contrary, when \code{ignore_strand = TRUE},
the \code{\link[GenomicAlignments]{summarizeOverlaps}} function will count
any alignment which overlaps with the element in the annotations regardless
of the strand. For further details see
\code{\link[GenomicAlignments]{summarizeOverlaps}}.}

\item{strandMode}{(Default 1) Numeric vector which can take values 0, 1 or 2.
The strand mode is a per-object switch on
\code{\link[GenomicAlignments:GAlignmentPairs-class]{GAlignmentPairs}}
objects that controls the behavior of the strand getter. See
\code{\link[GenomicAlignments:GAlignmentPairs-class]{GAlignmentPairs}}
class for further detail. If \code{singleEnd = TRUE}, then use either
\code{strandMode = NULL} or do not specify the \code{strandMode} parameter.}

\item{fragments}{(Default TRUE) A logical; applied to paired-end data only.
When \code{fragments=TRUE} (default), the read-counting method will also
count reads without mates, while when \code{fragments=FALSE} those reads
will not be counted. For further details see
\code{\link[GenomicAlignments]{summarizeOverlaps}()}.}
}
\value{
A \linkS4class{TEtranscriptsParam} object.
}
\description{
Build an object of the class \code{TEtranscriptsParam}
}
\details{
This is the constructor function for objects of the class
\code{TEtranscriptsParam-class}. This type of object is the input to the
function \code{\link{qtex}()} for quantifying expression of transposable
elements using the TEtranscripts method
\href{https://doi.org/10.1093/bioinformatics/btv422}{Jin et al. (2015)}. The
TEtranscripts algorithm quantifies TE expression by using an EM algorithm
to optimally distribute ambiguously mapped reads.
}
\examples{
bamfiles <- list.files(system.file("extdata", package="atena"),
                       pattern="*.bam", full.names=TRUE)
annot <- ERVmap_ann()
ttpar <- TEtranscriptsParam(bamfiles, annot, singleEnd = TRUE)
ttpar

}
\references{
Jin Y et al. TEtranscripts: a package for including transposable elements
in differential expression analysis of RNA-seq datasets.
Bioinformatics. 2015;31(22):3593-3599. DOI:
\url{https://doi.org/10.1093/bioinformatics/btv422}
}
