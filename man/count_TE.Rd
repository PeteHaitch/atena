% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_TE.R
\name{count_TE}
\alias{count_TE}
\title{Quantification of Transposable Elements based on ERVmap pipeline}
\usage{
count_TE(
  path_bam_files_sorted,
  singleEnd = FALSE,
  strandMode = 1,
  ann_file = NULL,
  eval_unique_r = TRUE,
  ignore_strand = TRUE,
  mode = "original"
)
}
\arguments{
\item{path_bam_files_sorted}{Character vector indicating the location where
the sorted by Query-name BAM files resulting from the \code{\link{sort_bam}}
function are located.}

\item{singleEnd}{(Default FALSE) Logical value indicating if reads are single
(\code{TRUE}) or paired-end (\code{FALSE}).}

\item{strandMode}{(Default 1) Numeric vector which can take values 0, 1 or 2.
The strand mode is a per-object switch on
\code{\link[GenomicAlignments:GAlignmentPairs-class]{GAlignmentPairs}}
objects that controls the behavior of the strand getter. See
\code{\link[GenomicAlignments:GAlignmentPairs-class]{GAlignmentPairs}}
class for further detail. If \code{singleEnd = TRUE}, then use either
\code{strandMode = NULL} or do not specify the \code{strandMode} parameter.}

\item{ann_file}{(Default NULL) A single string containing the path and name
of the endogenous retrovirus (ERVs) or TE annotation file (including the
extension of the file). The allowed file formats are BED and GTF / GFF
version 2. When \code{ann_file} is not specified (\code{ann_file = NULL}),
the human endogenous retroviruses annotations published by
\href{https://doi.org/10.1073/pnas.1814589115}{Tokuyama et al. (2018)}
will be used instead. These annotations are not strand-specific, so
\code{ignore_strand} must be \code{ignore_strand = TRUE}.}

\item{eval_unique_r}{(Default TRUE) Logical value indicating whether to apply
the alignment filters to unique reads (TRUE) or not (FALSE). These filters,
which are always applied to multi-mapping reads, are optional for unique
reads. If TRUE, the unique reads not passing one or more filters from the
ERVmap pipeline, except for the "AS - XS >= 5" filter, will be discarded to
compute TEs expression.}

\item{ignore_strand}{(Default TRUE) A logical which defines if the strand
should be taken into consideration when computing the overlap between reads
and TEs/ERVs in the annotations. When \code{ignore_strand = FALSE}, the
\code{\link[GenomicAlignments]{summarizeOverlaps}} function will only
consider those reads selected after filtering which overlap the TE or
ERV on the same strand. On the contrary, when \code{ignore_strand = TRUE},
the \code{\link[GenomicAlignments]{summarizeOverlaps}} function will count
any alignment which overlaps with the element in the annotations regardless
of the strand. For further details see
\code{\link[GenomicAlignments]{summarizeOverlaps}}.}

\item{mode}{(Default "original") Character string indicating the counting
mode for paired-end data. When \code{mode = "original"}, the counting method
present in the ERVmap original pipeline will be applied: each mate of a
paired-end read is counted once (two mates mapping to the same element result
in a count of 2). Instead, if \code{mode = "atena"}, when the two mates of
a paired-end read map to the same element, they are counted as a single hit.

(\code{TRUE}) or paired-end (\code{FALSE}).}
}
\value{
A `SummarizedExperiment` object containing the read counts for
each sample and element in the annotations file. Each sample is
represented as a column and each row corresponds to an element in the
annotations. Column names are extracted from the binary 'BAM' file name of
each sample.
}
\description{
\code{count_TE} quantifies the expression of transposable elements (TE) at
the locus level. The approach used by this function is based on the pipeline
described by
\href{https://doi.org/10.1073/pnas.1814589115}{Tokuyama et al. (2018)},
in which reads are processed following
conservative filtering criteria to provide reliable raw count data for each
genomic region encompassing a TE. Only those alignments that pass the filters
are considered for TE expression quantification.
}
\details{
Briefly, alignments need to pass three filtering criteria in order to be
included in the quantification of TEs. These three filters are:
\enumerate{
  \item Sum of hard and soft clipping bases to the length of the read must
  be lower than 0.02.
  \item The ratio of the edit distance to the sequence read length must be
  less than 0.02.
  \item The difference between the alignment score (AS tag) and the
  suboptimal alignment score (XS tag) must be equal or higher than 5.
}

As mentioned, this function requires the tag containing the suboptimal
alignment score in order to correctly perform the filtering. This is why,
for those datasets in which this information is not provided in the binary
'BAM' file, the \code{\link{getSuboptimalAlignScore}} function is called
internally to compute the suboptimal alignment scores.

Once the filtering criteria is applied to the alignments, only those
meeting the criteria are considered to obtain the read counts for each
element in the annotation file. The
\code{\link[GenomicAlignments]{summarizeOverlaps}} function is used for this
purpose.
}
\examples{
path_bam_files_sorted <- system.file("extdata", package = "atena")

jong_HERV_se <- count_TE(path_bam_files_sorted, eval_unique_r = TRUE,
                         ignore_strand = TRUE, singleEnd = TRUE)

}
\references{
Tokuyama M et al. ERVmap analysis reveals genome-wide transcription of human
endogenous retroviruses. PNAS. 2018;115(50):12565-12572. DOI:
\url{https://doi.org/10.1073/pnas.1814589115}
}
\seealso{
\code{\link[GenomicAlignments]{GAlignmentPairs-class}},
\code{\link[GenomicAlignments]{summarizeOverlaps}},
\code{\link{getSuboptimalAlignScore}}
}
